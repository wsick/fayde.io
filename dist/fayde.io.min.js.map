{"version":3,"sources":["_version.ts","fayde.io.js","FileControl.ts","upload/Uploader.ts","FileUploadControl.ts","FileUploadItem.ts","FilesChangedEventArgs.ts","SizeConverter.ts","upload/FailedEventArgs.ts","upload/ProgressedEventArgs.ts"],"names":["Fayde","Fayde.IO","__extends","this","d","b","__","constructor","p","hasOwnProperty","prototype","Fayde.IO.createFileInput","Fayde.IO.FileControl","Fayde.IO.FileControl.constructor","Fayde.IO.FileControl.OnApplyTemplate","Fayde.IO.FileControl.OnIsMultipleChanged","Fayde.IO.FileControl.OnFilterChanged","Fayde.IO.FileControl.Open","_this","OnFilesChanged","files","Fayde.IO.FileControl.OnFilesChanged","Fayde.IO.UploadReporting","o","Upload","Fayde.IO.Uploader","Fayde.IO.Uploader.constructor","get","Fayde.IO.Uploader.Reporting","enumerable","configurable","Fayde.IO.Uploader.Upload","Fayde.IO.FileUploadControl","Fayde.IO.FileUploadControl.constructor","Fayde.IO.FileUploadControl.OnUploaderTypeChanged","Fayde.IO.FileUploadControl.CreateUploader","Fayde.IO.FileUploadControl.OnApplyTemplate","Fayde.IO.FileUploadControl._OnFilesChanged","Fayde.IO.FileUploadControl._OnStart","Fayde.IO.FileUploadItem","Fayde.IO.FileUploadItem.constructor","Fayde.IO.FileUploadItem.Size","Fayde.IO.FileUploadItem.Name","Fayde.IO.FileUploadItem.Type","Fayde.IO.FileUploadItem.Upload","Fayde.IO.FileUploadItem._OnCancelled","Fayde.IO.FileUploadItem._OnCompleted","Fayde.IO.FileUploadItem._OnProgressed","Fayde.IO.FileUploadItem._OnFailed","Fayde.IO.FilesChangedEventArgs","Fayde.IO.FilesChangedEventArgs.constructor","Fayde.IO.round","Fayde.IO.SizeConverter","Fayde.IO.SizeConverter.Convert","Fayde.IO.SizeConverter.ConvertBack","Fayde.IO.FailedEventArgs","Fayde.IO.FailedEventArgs.constructor","Fayde.IO.ProgressedEventArgs","Fayde.IO.ProgressedEventArgs.constructor"],"mappings":"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","file":"fayde.io.min.js","sourcesContent":["module Fayde.IO {\r\n    export var version = '0.1.0';\r\n}",null,"module Fayde.IO {\r\n    import ContentControl = Fayde.Controls.ContentControl;\r\n    import ObservableCollection = Fayde.Collections.ObservableCollection;\r\n    import ButtonBase = Fayde.Controls.Primitives.ButtonBase;\r\n\r\n    export class FileControl extends ContentControl {\r\n        static IsMultipleProperty = DependencyProperty.Register(\"IsMultiple\", () => Boolean, FileControl, false, (d: FileControl, args) => d.OnIsMultipleChanged(args.OldValue, args.NewValue));\r\n        static FilterProperty = DependencyProperty.Register(\"Filter\", () => String, FileControl, undefined, (d: FileControl, args) => d.OnFilterChanged(args.OldValue, args.NewValue));\r\n        static FilesProperty = DependencyProperty.RegisterReadOnly(\"Files\", () => ObservableCollection, FileControl);\r\n        IsMultiple: boolean;\r\n        Filter: string;\r\n        Files: ObservableCollection<File>;\r\n\r\n        FilesChanged = new nullstone.Event<FilesChangedEventArgs>();\r\n\r\n        private $element: HTMLInputElement = null;\r\n        private $button: ButtonBase = null;\r\n\r\n        constructor() {\r\n            super();\r\n            this.DefaultStyleKey = FileControl;\r\n            this.SetCurrentValue(FileControl.FilesProperty, new ObservableCollection());\r\n        }\r\n\r\n        OnApplyTemplate() {\r\n            super.OnApplyTemplate();\r\n            this.$button = <ButtonBase>this.GetTemplateChild(\"BrowseButton\", ButtonBase);\r\n            if (this.$button)\r\n                this.$button.Click.on(this.Open, this);\r\n        }\r\n\r\n        OnIsMultipleChanged(oldValue: boolean, newValue: boolean) {\r\n            var el = this.$element;\r\n            if (el)\r\n                el.multiple = newValue === true;\r\n        }\r\n\r\n        OnFilterChanged(oldValue: string, newValue: string) {\r\n            var el = this.$element;\r\n            if (el) {\r\n                el.accept = newValue || undefined;\r\n            }\r\n        }\r\n\r\n        Open() {\r\n            var el = this.$element;\r\n            if (!el) {\r\n                el = this.$element = createFileInput(this.IsMultiple, this.Filter);\r\n                var _this = this;\r\n                el.addEventListener('change', function () {\r\n                    _this.OnFilesChanged(this.files);\r\n                }, false);\r\n            }\r\n            el.files = null;\r\n            el.click();\r\n        }\r\n\r\n        protected OnFilesChanged(files: FileList) {\r\n            var fs: File[] = [];\r\n            for (var i = 0; i < files.length; i++) {\r\n                fs.push(files[i]);\r\n            }\r\n            var old = this.Files.ToArray();\r\n            this.Files.Clear();\r\n            this.Files.AddRange(fs);\r\n            this.FilesChanged.raise(this, new FilesChangedEventArgs(old, fs));\r\n        }\r\n    }\r\n    Fayde.Controls.TemplateParts(FileControl,\r\n        {Name: \"BrowseButton\", Type: ButtonBase});\r\n\r\n    function createFileInput(isMultiple: boolean, filter: string): HTMLInputElement {\r\n        var el = document.createElement('input');\r\n        el.type = \"file\";\r\n        el.multiple = isMultiple === true;\r\n        el.accept = filter || undefined;\r\n        el.style.opacity = \"0.0\";\r\n        document.body.appendChild(el);\r\n        return el;\r\n    }\r\n}","module Fayde.IO {\r\n    export enum UploadReporting {\r\n        Complete = 1,\r\n        Progress = 2,\r\n        Failed = 4,\r\n        Cancelled = 8\r\n    }\r\n\r\n    export interface IUploader {\r\n        Reporting: UploadReporting;\r\n        Progressed: nullstone.Event<ProgressedEventArgs>;\r\n        Completed: nullstone.Event<any>;\r\n        Failed: nullstone.Event<FailedEventArgs>;\r\n        Cancelled: nullstone.Event<any>;\r\n        Upload(url: string, data: any, filename: string, filetype: string);\r\n    }\r\n    export var IUploader_ = new nullstone.Interface<IUploader>(\"IUploader\");\r\n    IUploader_.is = function (o: any): boolean {\r\n        return o && typeof o.Upload === \"function\";\r\n    };\r\n\r\n    export class Uploader implements IUploader {\r\n        get Reporting(): UploadReporting {\r\n            return UploadReporting.Complete | UploadReporting.Progress | UploadReporting.Failed | UploadReporting.Cancelled;\r\n        }\r\n\r\n        Progressed = new nullstone.Event<ProgressedEventArgs>();\r\n        Completed = new nullstone.Event<any>();\r\n        Failed = new nullstone.Event<FailedEventArgs>();\r\n        Cancelled = new nullstone.Event<any>();\r\n\r\n        private $active: XMLHttpRequest = null;\r\n\r\n        Upload(url: string, data: any, filename: string, filetype: string) {\r\n            if (this.$active)\r\n                throw new Error(\"Uploader can only upload once.\");\r\n            var xhr = this.$active = new XMLHttpRequest();\r\n            xhr.open(\"POST\", url, true);\r\n            xhr.setRequestHeader(\"X-File-Name\", filename);\r\n            xhr.setRequestHeader(\"X-File-Type\", filetype);\r\n\r\n            if (xhr.upload) {\r\n                xhr.upload.addEventListener(\"load\", this._OnUploadComplete, false);\r\n                xhr.upload.addEventListener(\"progress\", this._OnUploadProgress, false);\r\n                xhr.upload.addEventListener(\"error\", this._OnUploadErrored, false);\r\n                xhr.upload.addEventListener(\"abort\", this._OnUploadAborted, false);\r\n            }\r\n\r\n            var fdata = new FormData();\r\n            fdata.append('image', data);\r\n            xhr.send(fdata);\r\n        }\r\n\r\n        private _OnUploadComplete = (ev: Event) => {\r\n            this.Completed.raise(this, {});\r\n        };\r\n\r\n        private _OnUploadProgress = (ev: ProgressEvent) => {\r\n            this.Progressed.raise(this, new ProgressedEventArgs(ev.loaded, ev.total));\r\n        };\r\n\r\n        private _OnUploadErrored = (ev: ErrorEvent) => {\r\n            this.Failed.raise(this, new FailedEventArgs(ev));\r\n        };\r\n\r\n        private _OnUploadAborted = (ev: UIEvent) => {\r\n            this.Cancelled.raise(this, {});\r\n        };\r\n    }\r\n}","/// <reference path=\"upload/Uploader\" />\r\n\r\nmodule Fayde.IO {\r\n    import Control = Fayde.Controls.Control;\r\n    import ItemsControl = Fayde.Controls.ItemsControl;\r\n    import ObservableCollection = Fayde.Collections.ObservableCollection;\r\n    import ButtonBase = Fayde.Controls.Primitives.ButtonBase;\r\n\r\n    export class FileUploadControl extends Control {\r\n        static ItemsProperty = DependencyProperty.RegisterReadOnly(\"Items\", () => ObservableCollection, FileUploadControl);\r\n        static UploaderTypeProperty = DependencyProperty.Register(\"UploaderType\", () => Function, FileUploadControl, Uploader, (d: FileUploadControl, args) => d.OnUploaderTypeChanged(args.OldValue, args.NewValue));\r\n        static HasNoProgressProperty = DependencyProperty.RegisterReadOnly(\"HasNoProgress\", () => Boolean, FileUploadControl, false);\r\n        static UploadUriProperty = DependencyProperty.Register(\"UploadUri\", () => Uri, FileUploadControl);\r\n        Items: ObservableCollection<FileUploadItem>;\r\n        UploaderType: IUploader;\r\n        HasNoProgress: boolean;\r\n        UploadUri: Uri;\r\n\r\n        private $control: FileControl = null;\r\n        private $upload: ButtonBase = null;\r\n\r\n        constructor() {\r\n            super();\r\n            this.DefaultStyleKey = FileUploadControl;\r\n            this.SetCurrentValue(FileUploadControl.ItemsProperty, new ObservableCollection<FileUploadItem>());\r\n        }\r\n\r\n        protected OnUploaderTypeChanged(oldType: Function, newType: Function) {\r\n            var hasProgress = true;\r\n            if (!newType || typeof newType !== \"function\") {\r\n                hasProgress = false;\r\n            } else {\r\n                var test: IUploader = IUploader_.as(new (<any>newType)());\r\n                hasProgress = !!test && (test.Reporting & UploadReporting.Progress) === 0;\r\n            }\r\n            this.SetCurrentValue(FileUploadControl.HasNoProgressProperty, !hasProgress);\r\n        }\r\n\r\n        protected CreateUploader(): IUploader {\r\n            return new (<any>this.UploaderType)();\r\n        }\r\n\r\n        OnApplyTemplate() {\r\n            super.OnApplyTemplate();\r\n\r\n            if (this.$control)\r\n                this.$control.FilesChanged.off(this._OnFilesChanged, this);\r\n            this.$control = <FileControl>this.GetTemplateChild(\"FileControl\", FileControl);\r\n            if (this.$control)\r\n                this.$control.FilesChanged.on(this._OnFilesChanged, this);\r\n\r\n            if (this.$upload)\r\n                this.$upload.Click.off(this._OnStart, this);\r\n            this.$upload = <ButtonBase>this.GetTemplateChild(\"UploadButton\", ButtonBase);\r\n            if (this.$upload)\r\n                this.$upload.Click.on(this._OnStart, this);\r\n        }\r\n\r\n        private _OnFilesChanged(sender, args: FilesChangedEventArgs) {\r\n            this.Items.Clear();\r\n            this.Items.AddRange(args.NewFiles.map(file => new FileUploadItem(file)));\r\n        }\r\n\r\n        private _OnStart(sender, args) {\r\n            var url: string;\r\n            if (!this.UploadUri || !(url = this.UploadUri.toString())) {\r\n                console.warn(\"Cannot upload with UploadUri set.\");\r\n                return;\r\n            }\r\n            for (var en = this.Items.getEnumerator(); en.moveNext();) {\r\n                en.current.Upload(url, this.CreateUploader());\r\n            }\r\n        }\r\n    }\r\n    Fayde.Controls.TemplateParts(FileUploadControl,\r\n        {Name: \"FileControl\", Type: FileControl},\r\n        {Name: \"UploadButton\", Type: ButtonBase},\r\n        {Name: \"ItemsProgress\", Type: ItemsControl});\r\n}","module Fayde.IO {\r\n    import ObservableObject = Fayde.MVVM.ObservableObject;\r\n\r\n    export class FileUploadItem extends ObservableObject {\r\n        private $file: File;\r\n\r\n        UploadProgress = 0;\r\n        IsUploading = false;\r\n        UploadStatus = \"\";\r\n        UploadError = null;\r\n\r\n        constructor(file: File) {\r\n            super();\r\n            this.$file = file;\r\n        }\r\n\r\n        get Size(): number {\r\n            return this.$file ? this.$file.size : 0;\r\n        }\r\n\r\n        get Name(): string {\r\n            return this.$file ? this.$file.name : \"\";\r\n        }\r\n\r\n        get Type(): string {\r\n            return this.$file ? this.$file.type : \"\";\r\n        }\r\n\r\n        Upload(url: string, uploader: IUploader) {\r\n            this.IsUploading = true;\r\n            uploader.Cancelled.on(this._OnCancelled, this);\r\n            uploader.Completed.on(this._OnCompleted, this);\r\n            uploader.Progressed.on(this._OnProgressed, this);\r\n            uploader.Failed.on(this._OnFailed, this);\r\n            uploader.Upload(url, this.$file, this.Name, this.Type);\r\n        }\r\n\r\n        private _OnCancelled() {\r\n            this.UploadStatus = \"Cancelled\";\r\n            this.IsUploading = false;\r\n        }\r\n\r\n        private _OnCompleted() {\r\n            this.UploadStatus = \"Completed\";\r\n            this.IsUploading = false;\r\n        }\r\n\r\n        private _OnProgressed(sender, args: ProgressedEventArgs) {\r\n            this.UploadStatus = \"\";\r\n            this.UploadProgress = args.Loaded / args.Total;\r\n        }\r\n\r\n        private _OnFailed(sender, args: FailedEventArgs) {\r\n            this.UploadStatus = \"Failed\";\r\n            this.UploadError = args.Error;\r\n            this.IsUploading = false;\r\n        }\r\n    }\r\n    Fayde.MVVM.NotifyProperties(FileUploadItem, [\"UploadProgress\", \"IsUploading\", \"UploadStatus\", \"UploadError\"]);\r\n}","module Fayde.IO {\r\n    export class FilesChangedEventArgs implements nullstone.IEventArgs {\r\n        OldFiles: File[];\r\n        NewFiles: File[];\r\n\r\n        constructor(oldFiles: File[], newFiles: File[]) {\r\n            Object.defineProperties(this, {\r\n                \"OldFiles\": {\r\n                    value: oldFiles,\r\n                    writable: false\r\n                },\r\n                \"NewFiles\": {\r\n                    value: newFiles,\r\n                    writable: false\r\n                }\r\n            })\r\n        }\r\n    }\r\n}","module Fayde.IO {\r\n    var TB = Math.pow(2, 40);\r\n    var GB = Math.pow(2, 30);\r\n    var MB = Math.pow(2, 20);\r\n    var KB = Math.pow(2, 10);\r\n    var threshold = 0.9;\r\n\r\n    function round(val: number, digits: number) {\r\n        var factor = Math.pow(10, digits);\r\n        return Math.round(val * factor) / factor;\r\n    }\r\n\r\n    export class SizeConverter implements Fayde.Data.IValueConverter {\r\n        Convert(value: any, targetType: IType, parameter: any, culture: any): any {\r\n            var short: number;\r\n            if ((short = value / TB) > threshold)\r\n                return round(short, 2).toString() + \"TB\";\r\n            if ((short = value / GB) > threshold)\r\n                return round(short, 2).toString() + \"GB\";\r\n            if ((short = value / MB) > threshold)\r\n                return round(short, 2).toString() + \"MB\";\r\n            if ((short = value / KB) > threshold)\r\n                return round(short, 2).toString() + \"KB\";\r\n            return value;\r\n        }\r\n\r\n        ConvertBack(value: any, targetType: IType, parameter: any, culture: any): any {\r\n            return value;\r\n        }\r\n    }\r\n    Fayde.Data.IValueConverter_.mark(SizeConverter);\r\n}","module Fayde.IO {\r\n    export class FailedEventArgs implements nullstone.IEventArgs {\r\n        Error: any;\r\n\r\n        constructor(error: any) {\r\n            Object.defineProperties(this, {\r\n                \"Error\": {\r\n                    value: error,\r\n                    writable: false\r\n                }\r\n            })\r\n        }\r\n    }\r\n}","module Fayde.IO {\r\n    export class ProgressedEventArgs implements nullstone.IEventArgs {\r\n        Loaded: number;\r\n        Total: number;\r\n\r\n        constructor(loaded: number, total: number) {\r\n            Object.defineProperties(this, {\r\n                \"Loaded\": {\r\n                    value: loaded,\r\n                    writable: false\r\n                },\r\n                \"Total\": {\r\n                    value: total,\r\n                    writable: false\r\n                }\r\n            })\r\n        }\r\n    }\r\n}"],"sourceRoot":"/source/"}